REACT JS
==========
first check node version and type: npm install create-react-app

Installation: first we need to create a folder..and goto folder location open cmd type >>> npx create-react-app vijay
>>> next add folder to VS Code and delete unused files(except App.js, index.js, .gitignore, package-lock.json, package.json, README.md)
>>> next remove import logo stmts in App.js, remove header part also
>>> next in index.js remove unused (except import React from react, ReactDOM, App From ./App)
>>> next open new terminal and point to >>> cd vijay  >>> npm start

Folder Structure:
-----------------
.gitignore: when you uploading your react project into github if you dont want to upload particular files then you can give that file name in gitignore file below dependencies so that file will not uploaded.
 ex:    # dependencies
        /node_modules
        /.pnp
        .pnp.js

package-lock.json: the entire urls, resources, integrated files
package.josn:      the entire dependencies details ad versions
README.md:  the details of projects we can write so that others can read it


Integrate Bootstrap In React:
==============================
>> goto getbootstrap.com and copy include via CDN Links(two links) and place those links in public folder index.html file's
   header section...and type in terminal
    >> npm install bootstrap

LINKS To Integrate Bootstrap:
=============================
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

Note: 1)in html class attribute we used but in react className we have to use.
      2)self closing tags we have to give for some tags ex: img, input, hr etc.
-----------------------------------------------------------------------------
>> when we are creating functions in react the name of function must start with capital letter
>> after creating function we have to export
>> default is used to export only one function
>> ex:

function App() {
  return (
    <div className="App">
     <h1 className="text-center">Vijay Karasala</h1>

     </div>


  );
}

export default App;


>>when you want to export two or more functions use below statement
  ex:   export{Navbar, Cards};

>>after exporting functions we have to import those functions in App.js like this
   ex: import { Navbar, Cards } from "./navbar";

>>after importing we have to call components like this
   ex: <Navbar/>
       <Cards/>

===========================================================================================================
Routing:Routing is the functionality to redirect from one page to another page without re-loading(refreshing)
         whole page

To Install:
>> npm install react-router-dom

Note: if you want to use Routers You Have To Import Dependencies
      Ex: import{BrowserRouter,Routes,Route,Link} from "react-router-dom";
  
After that define path like this:
 
    <BrowserRouter>
     <Routes>
      <Route path="/nav" element={<Navbar/>}/>
      <Route path="/card" element={<Cards/>}/>
     </Routes>
     </BrowserRouter>

Note: but in above code we need to give path on url but i dont want to give path manually so we have to use link
Ex:  <BrowserRouter>
     <Routes>
      <Route path="/nav" element={<Navbar/>}/>
      <Route path="/card" element={<Cards/>}/>
     </Routes>
     <Link to='/nav'> Go To Nav </Link><br></br>
     <Link to='/card'>Go To Card </Link>
     </BrowserRouter>

=======================================================================================================================
useState : useState is React Hook that allows you to add state to a functional component. It returns an array with two values ,the current state and a function to update it.
        >> The Hook takes an initial state value as an argument and returns an updated state
        >>Benefits of useState:  No need to write a constructor just to initialize state

>> first we need to import
   ex: import { useState } from "react";

>> next we need to write this in function
    ex: function App() {
        const[state,setState]=useState("HARSHA");
        function handleData() {
        setState("VIJAY"); 
        }

>>next we need to write this in return 
   ex:  <h2>{state}</h2>
        <button onClick={handleData}> UPDATE </button>

==================================================================================================================================
useEffect:

>>first we need to import
    ex: import { useState,useEffect } from "react";

>>next we need to write this in function
    ex: const[data,setData]=useState([])
          useEffect(()=>{
          fetch('https://fakestoreapi.com/products')
          .then(response=>response.json())
          .then(value=>setData(value))
       },[])
 

>>next we need to write this in return
  ex:  {data.map((list)=>{
       return(
        <>
        <li>{list.title}</li>
        <li>{list.price}</li>
        <img src={list.image} alt="vijay"/>
        </>
         )
        }
       )}

============================================================================================
Props: Props Used To send data from one component to another component
        
        in App.js File
        ex: function App(props){
            
            return(
                  <div className="App" style{{fontFamily:"verdana"}}>
                  <h1>{props.name}</h1>
                  </div>
                  );     
            }
           export default App;

         in index.html file
          ex: import React from 'react';
              import ReactDOM from 'react-dom/client';
              import App from './App';

              const root = ReactDOM.createRoot(document.getElementById('root'));
              root.render(
              <React.StrictMode>

              <App name="vijay"/>
    
             </React.StrictMode> 
             );
=========================================================================================================================================================
Axios: to send data from UI to Database axios used, Axios, which is a popular library is mainly used to send asynchronous HTTP requests to REST endpoints.
       first we need to install ex:  npm install axios
   

====================================================================
Some Front End Tricks:
1)To change color of whole background:

let color=prompt("SELECT THEME");
document.body.style.background=color;
===================================================================

REACT INTERVIEW QNS:
====================

How to check reactjs version in React?
A:   npm list react
                       (or)
You can check the version of React.js that you are using in your project by looking at the package.json file 
in your project directory
-------------------------------------------------------------------------------------------------------------
>ReactJs is a javascript library that is used for building user interfaces in a declarative and effecient way
> React is used to build single-page applications.
  React allows us to create reusable UI components.

>It is a component-based front-end library responsible only for the view layer of an MVC (Model View Controller) architecture.

> JSX stands for JavaScript XML.
  JSX allows us to write HTML in React.
  JSX makes it easier to write and add HTML in React.

>Components are independent and reusable blocks of code.

>Props(Properties) are used to pass data from one component to another.
 The state is local data storage that is local to the component only and cannot be passed to other components.

>React Router is a standard library for routing in React. It enables the navigation among views of various components in a React Application

>Hooks are a new addition in React 16.8. hooks let you use state and other React features without writing a class.

>useState is used to manage state within a component, allowing you to store and update data.
 
>useEffect is used to perform side effects in a component, such as updating the document title, fetching data, or subscribing to events.
 
-----------------------------------======= REACT-LIFE-CYCLE =======-------------------------------------------------
*Each component in React has a lifecycle which you can monitor and manipulate during its three main phases.
*The three phases are: Mounting, Updating, and Unmounting.
*Mounting means putting elements into the DOM.
*The next phase in the lifecycle is when a component is updated.
 *A component is updated whenever there is a change in the component's state or props.
*The next phase in the lifecycle is when a component is removed from the DOM, or unmounting as React likes to call it
----------------------------------------------------------------------------------------------------------------------







